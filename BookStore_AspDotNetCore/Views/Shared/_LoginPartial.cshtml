
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@using ClassicM.DataAccess.Repository.IRepository;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject IUnitOfWork _unitOfWork

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var claimsIdentity = (ClaimsIdentity)User.Identity;
    var claim = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier);
    ApplicationUser user = _unitOfWork.ApplicationUser.GetFirstOrDefault(x => x.Id == claim.Value);
    <li class="nav-item">
        <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" 
            title="Manage">Hello @*@UserManager.GetUserName(User)*@ @user.Name !
        </a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
